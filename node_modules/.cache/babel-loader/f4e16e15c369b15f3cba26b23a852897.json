{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_SCREAM:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          screamId: action.payload.screamId\n        }]\n      };\n\n    case UNLIKE_SCREAM:\n      return { ...state,\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/csamu/Desktop/commentwars/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","LIKE_SCREAM","userHandle","handle","screamId","UNLIKE_SCREAM","filter","like","MARK_NOTIFICATIONS_READ","forEach","not","read"],"mappings":"AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,QAKS,UALT;AAOE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,aAAa,EAAE;AALI,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKH,mBAAL;AACE,aAAOE,YAAP;;AACF,SAAKJ,QAAL;AACE,aAAO;AACLK,QAAAA,aAAa,EAAE,IADV;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGL,WAAGK,MAAM,CAACE;AAHL,OAAP;;AAKF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKQ,WAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEO,UAAAA,UAAU,EAAEL,KAAK,CAACH,WAAN,CAAkBS,MADhC;AAEEC,UAAAA,QAAQ,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAF3B,SAFK;AAFF,OAAP;;AAUF,SAAKC,aAAL;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACH,QAAL,KAAkBN,MAAM,CAACE,OAAP,CAAeI,QADtC;AAFF,OAAP;;AAMF,SAAKI,uBAAL;AACEX,MAAAA,KAAK,CAACD,aAAN,CAAoBa,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACL,GAAGd;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA3CJ;AA6CD","sourcesContent":["import {\r\n    SET_USER,\r\n    SET_AUTHENTICATED,\r\n    SET_UNAUTHENTICATED,\r\n    LOADING_USER\r\n  } from '../types';\r\n  \r\n  const initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_AUTHENTICATED:\r\n        return {\r\n          ...state,\r\n          authenticated: true\r\n        };\r\n      case SET_UNAUTHENTICATED:\r\n        return initialState;\r\n      case SET_USER:\r\n        return {\r\n          authenticated: true,\r\n          loading: false,\r\n          ...action.payload\r\n        };\r\n      case LOADING_USER:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case LIKE_SCREAM:\r\n        return {\r\n          ...state,\r\n          likes: [\r\n            ...state.likes,\r\n            {\r\n              userHandle: state.credentials.handle,\r\n              screamId: action.payload.screamId\r\n            }\r\n          ]\r\n        };\r\n      case UNLIKE_SCREAM:\r\n        return {\r\n          ...state,\r\n          likes: state.likes.filter(\r\n            (like) => like.screamId !== action.payload.screamId\r\n          )\r\n        };\r\n      case MARK_NOTIFICATIONS_READ:\r\n        state.notifications.forEach((not) => (not.read = true));\r\n        return {\r\n          ...state\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}