{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\src\\\\components\\\\Postbar.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport PostResponse from \"./Response\";\nimport { addAchievment } from \"../redux/actions/dataActions\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport EmojiEventsIcon from \"@material-ui/icons/EmojiEvents\";\nconst styles = {\n  Card: {\n    padding: 5,\n    marginTop: 10,\n    marginRight: 20,\n    marginLeft: 20,\n    marginBottom: 10,\n    backgroundColor: \"#112647\"\n  },\n  Button1: {\n    backgroundColor: \"#ffffff\"\n  },\n  Button2: {\n    backgroundColor: \"#ffffff\",\n    marginLeft: \"auto\"\n  },\n  icon1: {\n    color: \"#112647\"\n  },\n  icon2: {\n    color: \"#e0d124\"\n  }\n};\n\nclass Postbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (id, goal) => {\n      this.props.addAchievment({\n        goalid: id,\n        goal: goal\n      });\n    };\n  }\n\n  render() {\n    var authenticated = this.props.user.authenticated;\n    var id = this.props.goal.id; //This Goal is sent from parent component through props, not through Redux\n\n    var goal = this.props.goal.body;\n    return React.createElement(Card, {\n      style: styles.Card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(PostResponse, {\n      goalid: goal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"New Post\")), React.createElement(Button, {\n      style: styles.Button2,\n      disabled: !authenticated,\n      onClick: () => {\n        this.handleClick(id, goal);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(EmojiEventsIcon, {\n      style: styles.icon2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Achieved\"))));\n  }\n\n}\n\nPostbar.propTypes = {\n  user: PropTypes.object.isRequired,\n  addAchievment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  addAchievment\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Postbar));","map":{"version":3,"sources":["C:/Users/csamu/OneDrive/Desktop/Desktop/commentwars/src/components/Postbar.js"],"names":["React","Component","withStyles","PropTypes","PostResponse","addAchievment","Card","Typography","connect","Grid","Button","EmojiEventsIcon","styles","padding","marginTop","marginRight","marginLeft","marginBottom","backgroundColor","Button1","Button2","icon1","color","icon2","Postbar","handleClick","id","goal","props","goalid","render","authenticated","user","body","propTypes","object","isRequired","func","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostResponse from \"./Response\";\r\nimport { addAchievment } from \"../redux/actions/dataActions\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EmojiEventsIcon from \"@material-ui/icons/EmojiEvents\";\r\n\r\nconst styles = {\r\n  Card: {\r\n    padding: 5,\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n    marginLeft: 20,\r\n    marginBottom: 10,\r\n    backgroundColor: \"#112647\",\r\n  },\r\n  Button1: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  Button2: {\r\n    backgroundColor: \"#ffffff\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  icon1: {\r\n    color: \"#112647\",\r\n  },\r\n  icon2: {\r\n    color: \"#e0d124\",\r\n  },\r\n};\r\n\r\nclass Postbar extends Component {\r\n  handleClick = (id, goal) => {\r\n    this.props.addAchievment({ goalid: id, goal: goal });\r\n  };\r\n\r\n  render() {\r\n    var authenticated = this.props.user.authenticated;\r\n    var id = this.props.goal.id;\r\n\r\n    //This Goal is sent from parent component through props, not through Redux\r\n\r\n    var goal = this.props.goal.body;\r\n\r\n    return (\r\n      <Card style={styles.Card}>\r\n        <Grid container>\r\n          <PostResponse goalid={goal}>\r\n            <Typography>New Post</Typography>\r\n          </PostResponse>\r\n          <Button\r\n            style={styles.Button2}\r\n            disabled={!authenticated}\r\n            onClick={() => {\r\n              this.handleClick(id, goal);\r\n            }}\r\n          >\r\n            <EmojiEventsIcon style={styles.icon2}></EmojiEventsIcon>\r\n            <Typography>Achieved</Typography>\r\n          </Button>\r\n        </Grid>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nPostbar.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  addAchievment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  addAchievment,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Postbar));\r\n"]},"metadata":{},"sourceType":"module"}