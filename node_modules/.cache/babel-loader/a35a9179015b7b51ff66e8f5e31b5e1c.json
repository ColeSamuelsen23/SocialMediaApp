{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamu\\\\Desktop\\\\commentwars\\\\src\\\\pages\\\\signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Logo from '../imgs/loginimg.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Link from '@material-ui/core/Link';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '60px auto 0px auto'\n  },\n  button: {\n    margin: 20,\n    position: 'relative'\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\n\nclass signup extends Component {\n  constructor(props) {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.username\n      };\n      axios.post('https://cors-anywhere.herokuapp.com/https://us-central1-socialapp-35d2e.cloudfunctions.net/api/signup', newUserData).then(res => {\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          errors: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      console.log(\"yepp\");\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Logo,\n      width: \"150\",\n      className: classes.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"SignUp\"), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.handleChange,\n      id: \"handle\",\n      name: \"handle\",\n      type: \"text\",\n      label: \"Username\",\n      className: classes.textfield,\n      value: this.state.email,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textfield,\n      value: this.state.email,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textfield,\n      value: this.state.password,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      label: \"Confirm Password\",\n      className: classes.textfield,\n      value: this.state.password,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Signup\", loading && React.createElement(CircularProgress, {\n      size: 25,\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Have an Account? \", React.createElement(Link, {\n      href: \"./login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Login\")))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(signup);","map":{"version":3,"sources":["C:/Users/csamu/Desktop/commentwars/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","Grid","Logo","Typography","TextField","Button","axios","Link","CircularProgress","styles","form","textAlign","image","margin","button","position","progress","signup","constructor","props","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","username","post","then","res","localStorage","setItem","data","token","history","push","catch","err","errors","handleChange","console","log","target","name","value","render","classes","textfield"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Logo from '../imgs/loginimg.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport Link from '@material-ui/core/Link';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst styles = {\r\n\r\n    form: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n\r\n        margin:'60px auto 0px auto'\r\n    },\r\n    \r\n    button: {\r\n        margin:20,\r\n        position: 'relative'\r\n    },\r\n\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nclass signup extends Component {\r\n    \r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        this.setState({loading:true});\r\n\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.username\r\n        }\r\n        \r\n\r\n        axios.post('https://cors-anywhere.herokuapp.com/https://us-central1-socialapp-35d2e.cloudfunctions.net/api/signup', newUserData)\r\n        .then(res => {\r\n            localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n\r\n            this.setState({\r\n                loading:false\r\n            });\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(err => {\r\n            this.setState({\r\n                errors: err,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n    }\r\n    handleChange = (event) => {\r\n        console.log(\"yepp\");\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        \r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super();\r\n    \r\n        this.state = {\r\n             email: '',\r\n             password: '',\r\n             confirmPassword: '',\r\n             handle: '',\r\n             loading: false,\r\n             errors: {}\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {errors, loading} = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n\r\n                <Grid item sm>\r\n                    <img src = {Logo} width = \"150\" className = {classes.image}></img>\r\n                    <Typography variant = \"h3\">SignUp</Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n\r\n                        <TextField onChange ={this.handleChange}\r\n                        id =\"handle\"\r\n                        name=\"handle\" \r\n                        type=\"text\" \r\n                        label=\"Username\" \r\n                        className={classes.textfield}\r\n                        value = {this.state.email} fullWidth>\r\n                        </TextField>\r\n\r\n                        <TextField onChange ={this.handleChange}\r\n                        id =\"email\"\r\n                        name=\"email\" \r\n                        type=\"email\" \r\n                        label=\"Email\" \r\n                        className={classes.textfield}\r\n                        value = {this.state.email} fullWidth>\r\n                        </TextField>\r\n\r\n                        <TextField onChange ={this.handleChange} \r\n                        id =\"password\" \r\n                        name=\"password\"\r\n                        type=\"password\" \r\n                        label=\"Password\" \r\n                        className={classes.textfield} value = {this.state.password} fullWidth>\r\n                        </TextField>\r\n\r\n                        <TextField onChange ={this.handleChange} \r\n                        id =\"confirmPassword\" \r\n                        name=\"confirmPassword\"\r\n                        type=\"password\" \r\n                        label=\"Confirm Password\" \r\n                        className={classes.textfield} value = {this.state.password} fullWidth>\r\n                        </TextField>\r\n\r\n                        <Button type =\"submit\"\r\n                         variant = \"contained\" \r\n                         color = \"primary\" \r\n                         className={classes.button}\r\n                         disabled= {loading}>\r\n                         Signup\r\n                         {loading && (\r\n                            <CircularProgress size = {25} className={classes.progress}/>     \r\n                         )}\r\n                         </Button>\r\n                        <div>\r\n                            Have an Account? <Link href=\"./login\">Login</Link>\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(signup);\r\n"]},"metadata":{},"sourceType":"module"}