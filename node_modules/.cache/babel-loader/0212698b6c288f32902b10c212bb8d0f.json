{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import withStyles from'@material-ui/core/styles/withStyles';import PostResponse from'./Response';import{addAchievment}from'../redux/actions/dataActions';import Card from'@material-ui/core/Card';import Typography from'@material-ui/core/Typography';import{connect}from'react-redux';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import EmojiEventsIcon from'@material-ui/icons/EmojiEvents';var styles={Card:{padding:5,marginTop:10,marginRight:20,marginLeft:20,marginBottom:10,backgroundColor:'#112647'},Button1:{backgroundColor:'#ffffff'},Button2:{backgroundColor:'#ffffff',marginLeft:'auto'},icon1:{color:'#112647'},icon2:{color:\"#e0d124\"}};var Postbar=/*#__PURE__*/function(_Component){_inherits(Postbar,_Component);function Postbar(){var _getPrototypeOf2;var _this;_classCallCheck(this,Postbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Postbar)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleClick=function(id,goal){_this.props.addAchievment({goalid:id,goal:goal});};return _this;}_createClass(Postbar,[{key:\"render\",value:function render(){var _this2=this;var authenticated=this.props.user.authenticated;var id=this.props.goal.id;//This Goal is sent from parent component through props, not through Redux\nvar goal=this.props.goal.body;return React.createElement(Card,{style:styles.Card},React.createElement(Grid,{container:true},React.createElement(PostResponse,null,React.createElement(Typography,null,\"New Post\")),React.createElement(Button,{style:styles.Button2,disabled:!authenticated,onClick:function onClick(){_this2.handleClick(id,goal);}},React.createElement(EmojiEventsIcon,{style:styles.icon2}),React.createElement(Typography,null,\"Achieved\"))));}}]);return Postbar;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user};};var mapActionsToProps={addAchievment:addAchievment};export default connect(mapStateToProps,mapActionsToProps)(withStyles(styles)(Postbar));","map":{"version":3,"sources":["C:/Users/csamu/OneDrive/Desktop/Desktop/commentwars/src/components/Postbar.js"],"names":["React","Component","withStyles","PostResponse","addAchievment","Card","Typography","connect","Grid","Button","EmojiEventsIcon","styles","padding","marginTop","marginRight","marginLeft","marginBottom","backgroundColor","Button1","Button2","icon1","color","icon2","Postbar","handleClick","id","goal","props","goalid","authenticated","user","body","mapStateToProps","state","mapActionsToProps"],"mappings":"u5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAwB,qCAAxB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,YAAzB,CACA,OAAQC,aAAR,KAA4B,8BAA5B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXN,IAAI,CAAC,CACDO,OAAO,CAAC,CADP,CAEDC,SAAS,CAAC,EAFT,CAGDC,WAAW,CAAC,EAHX,CAIDC,UAAU,CAAC,EAJV,CAKDC,YAAY,CAAC,EALZ,CAMDC,eAAe,CAAE,SANhB,CADM,CASXC,OAAO,CAAC,CACJD,eAAe,CAAE,SADb,CATG,CAYXE,OAAO,CAAC,CAEJF,eAAe,CAAE,SAFb,CAGJF,UAAU,CAAC,MAHP,CAZG,CAiBXK,KAAK,CAAE,CACHC,KAAK,CAAE,SADJ,CAjBI,CAqBXC,KAAK,CAAE,CACHD,KAAK,CAAE,SADJ,CArBI,CAAf,C,GA0BME,CAAAA,O,mYAEFC,W,CAAc,SAACC,EAAD,CAAKC,IAAL,CAAc,CACxB,MAAKC,KAAL,CAAWvB,aAAX,CAAyB,CAAEwB,MAAM,CAAEH,EAAV,CAAcC,IAAI,CAAEA,IAApB,CAAzB,EACD,C,0EAEM,iBAEL,GAAIG,CAAAA,aAAa,CAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,aAApC,CACA,GAAIJ,CAAAA,EAAE,CAAG,KAAKE,KAAL,CAAWD,IAAX,CAAgBD,EAAzB,CAEA;AAEA,GAAIC,CAAAA,IAAI,CAAG,KAAKC,KAAL,CAAWD,IAAX,CAAgBK,IAA3B,CAEA,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEpB,MAAM,CAACN,IAApB,EACI,oBAAC,IAAD,EAAM,SAAS,KAAf,EACQ,oBAAC,YAAD,MACI,oBAAC,UAAD,iBADJ,CADR,CAII,oBAAC,MAAD,EAAQ,KAAK,CAAEM,MAAM,CAACQ,OAAtB,CAA+B,QAAQ,CAAE,CAACU,aAA1C,CAAyD,OAAO,CAAE,kBAAM,CAAE,MAAI,CAACL,WAAL,CAAiBC,EAAjB,CAAoBC,IAApB,EAA0B,CAApG,EACI,oBAAC,eAAD,EAAiB,KAAK,CAAEf,MAAM,CAACW,KAA/B,EADJ,CAEI,oBAAC,UAAD,iBAFJ,CAJJ,CADJ,CADJ,CAcH,C,qBA7BiBrB,S,EAoCpB,GAAM+B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCH,IAAI,CAAEG,KAAK,CAACH,IADsB,CAAZ,EAAxB,CAIA,GAAMI,CAAAA,iBAAiB,CAAG,CACxB9B,aAAa,CAAbA,aADwB,CAA1B,CAIA,cAAeG,CAAAA,OAAO,CACpByB,eADoB,CAEpBE,iBAFoB,CAAP,CAGbhC,UAAU,CAACS,MAAD,CAAV,CAAmBY,OAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles  from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport PostResponse from './Response';\r\nimport {addAchievment} from '../redux/actions/dataActions';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\n\r\nconst styles = {\r\n    Card:{\r\n        padding:5,\r\n        marginTop:10,\r\n        marginRight:20,\r\n        marginLeft:20,\r\n        marginBottom:10,\r\n        backgroundColor: '#112647'\r\n    },\r\n    Button1:{\r\n        backgroundColor: '#ffffff'\r\n    },    \r\n    Button2:{\r\n\r\n        backgroundColor: '#ffffff',\r\n        marginLeft:'auto'\r\n    },\r\n    icon1: {\r\n        color: '#112647'\r\n        \r\n    },\r\n    icon2: {\r\n        color: \"#e0d124\"\r\n    }\r\n}\r\n\r\nclass Postbar extends Component {\r\n\r\n    handleClick = (id, goal) => {\r\n        this.props.addAchievment({ goalid: id, goal: goal });\r\n      };\r\n\r\n    render() {\r\n        \r\n        var authenticated = this.props.user.authenticated;\r\n        var id = this.props.goal.id;\r\n\r\n        //This Goal is sent from parent component through props, not through Redux\r\n\r\n        var goal = this.props.goal.body;\r\n\r\n        return (\r\n            <Card style={styles.Card}>\r\n                <Grid container>\r\n                        <PostResponse>\r\n                            <Typography>New Post</Typography>\r\n                        </PostResponse>\r\n                    <Button style={styles.Button2} disabled={!authenticated} onClick={() => { this.handleClick(id,goal)}}>\r\n                        <EmojiEventsIcon style={styles.icon2}></EmojiEventsIcon>\r\n                        <Typography>Achieved</Typography>\r\n                    </Button>\r\n                </Grid>\r\n            </Card>\r\n        \r\n        )\r\n    }\r\n}\r\nPostbar.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    addAchievment: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    user: state.user\r\n  });\r\n  \r\n  const mapActionsToProps = {\r\n    addAchievment\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n  )(withStyles(styles)(Postbar));"]},"metadata":{},"sourceType":"module"}