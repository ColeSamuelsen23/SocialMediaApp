{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\src\\\\components\\\\Navbar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logoutUser } from '../redux/actions/userActions'; // MUI stuff\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button'; // Icons\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Typography } from '@material-ui/core';\n\nclass Navbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = () => {\n      this.props.logoutUser();\n    };\n  }\n\n  render() {\n    const {\n      user: {\n        userData\n      }\n    } = this.props;\n    var handle, createdAt;\n\n    if (userData) {\n      handle = userData.credentials.handle;\n    }\n\n    const {\n      authenticated\n    } = this.props;\n    return React.createElement(AppBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      className: \"nav-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, authenticated ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Button, {\n      component: Link,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(HomeIcon, {\n      color: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", handle), React.createElement(Button, {\n      color: \"inherit\",\n      onClick: this.handleLogout,\n      style: {\n        marginLeft: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Logout\"))) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"inherit\",\n      component: Link,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      color: \"inherit\",\n      component: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Button, {\n      color: \"inherit\",\n      component: Link,\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Signup\"))));\n  }\n\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated,\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  logoutUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Navbar);","map":{"version":3,"sources":["C:/Users/csamu/OneDrive/Desktop/Desktop/commentwars/src/components/Navbar.js"],"names":["React","Component","Fragment","Link","connect","PropTypes","logoutUser","AppBar","Toolbar","Button","HomeIcon","Typography","Navbar","handleLogout","props","render","user","userData","handle","createdAt","credentials","authenticated","marginLeft","propTypes","bool","isRequired","func","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logoutUser } from '../redux/actions/userActions';\r\n// MUI stuff\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n// Icons\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() \r\n  {\r\n    const {user :{userData}}\r\n     = this.props;\r\n\r\n     var handle, createdAt;\r\n\r\n     if (userData) {handle = userData.credentials.handle}\r\n    const { authenticated } = this.props;\r\n    return (\r\n      <AppBar>\r\n        <Toolbar className=\"nav-container\">\r\n          {authenticated ? (\r\n            <Fragment>\r\n                <Button component={Link} to=\"/login\">\r\n                  <HomeIcon color =\"action\"></HomeIcon>\r\n              </Button>\r\n            <Typography> {handle}</Typography>\r\n              <Button color=\"inherit\" onClick={this.handleLogout} style={{marginLeft: \"auto\"}}>\r\n                <Typography>Logout</Typography>\r\n              </Button>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                Login\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/\">\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                Signup\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  authenticated: PropTypes.bool.isRequired,\r\n  logoutUser: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated,\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = { logoutUser};\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(Navbar);\r\n\r\n"]},"metadata":{},"sourceType":"module"}