{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\SocialMediaApp\\\\src\\\\components\\\\Response.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // MUI Stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { postResponse } from \"../redux/actions/dataActions\";\nconst styles = {\n  submitButton: {\n    marginTop: 10,\n    textAlign: \"center\",\n    backgroundColor: \"#112647\"\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"6%\"\n  },\n  Button1: {\n    backgroundColor: \"#ffffff\"\n  }\n};\n\nclass Response extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      body: \"\"\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postResponse(this.props.postId, {\n        body: this.state.body\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.UI.loading) {\n      this.setState({\n        body: \"\"\n      });\n    }\n  }\n\n  render() {\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleOpen,\n      tip: \"Post a Comment!\",\n      style: styles.Button1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"COMMENT\"), React.createElement(AddCircleOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(DialogTitle, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"How ya Been?\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"body\",\n      type: \"text\",\n      label: \"Reply\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"Hi\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: styles.submitButton,\n      type: \"submit\",\n      variant: \"contained\",\n      disabled: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", React.createElement(Typography, {\n      style: {\n        color: \"#ffffff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" SUBMIT \"), loading && React.createElement(CircularProgress, {\n      style: styles.progressSpinner,\n      size: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\npostResponse.propTypes = {\n  postResponse: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  postResponse\n})(withStyles(styles)(Response));","map":{"version":3,"sources":["C:/Users/csamu/OneDrive/Desktop/Desktop/SocialMediaApp/src/components/Response.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddCircleOutlineIcon","CloseIcon","Typography","connect","postResponse","styles","submitButton","marginTop","textAlign","backgroundColor","progressSpinner","position","closeButton","left","top","Button1","Response","state","open","body","handleOpen","setState","handleClose","handleChange","event","target","name","value","handleSubmit","preventDefault","props","postId","componentWillReceiveProps","nextProps","UI","loading","render","color","propTypes","func","isRequired","object","mapStateToProps","authenticated","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n// MUI Stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// Redux stuff\r\nimport { connect } from \"react-redux\";\r\nimport { postResponse } from \"../redux/actions/dataActions\";\r\n\r\nconst styles = {\r\n  submitButton: {\r\n    marginTop: 10,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#112647\",\r\n  },\r\n  progressSpinner: {\r\n    position: \"absolute\",\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    left: \"91%\",\r\n    top: \"6%\",\r\n  },\r\n  Button1: {\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n};\r\n\r\nclass Response extends Component {\r\n  state = {\r\n    open: false,\r\n    body: \"\",\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.UI.loading) {\r\n      this.setState({ body: \"\" });\r\n    }\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.postResponse(this.props.postId, { body: this.state.body });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      UI: { loading },\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={this.handleOpen}\r\n          tip=\"Post a Comment!\"\r\n          style={styles.Button1}\r\n        >\r\n          <Typography>COMMENT</Typography>\r\n          <AddCircleOutlineIcon />\r\n        </Button>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <Button tip=\"Close\" onClick={this.handleClose}>\r\n            <CloseIcon />\r\n          </Button>\r\n          <DialogTitle style={{ textAlign: \"center\" }}>\r\n            How ya Been?\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                name=\"body\"\r\n                type=\"text\"\r\n                label=\"Reply\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"Hi\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <Button\r\n                style={styles.submitButton}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n              >\r\n                {\" \"}\r\n                <Typography style={{ color: \"#ffffff\" }}> SUBMIT </Typography>\r\n                {loading && (\r\n                  <CircularProgress style={styles.progressSpinner} size={30} />\r\n                )}\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\npostResponse.propTypes = {\r\n  postResponse: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  authenticated: state.user.authenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { postResponse })(\r\n  withStyles(styles)(Response)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}