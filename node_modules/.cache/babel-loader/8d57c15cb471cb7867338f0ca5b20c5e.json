{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamu\\\\OneDrive\\\\Desktop\\\\Desktop\\\\commentwars\\\\src\\\\components\\\\Postbar.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport PostResponse from './Response';\nimport { addAchievment } from '../redux/actions/dataActions';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\nconst styles = {\n  Card: {\n    padding: 5,\n    marginTop: 10,\n    marginRight: 20,\n    marginLeft: 20,\n    marginBottom: 10,\n    backgroundColor: '#112647'\n  },\n  Button1: {\n    backgroundColor: '#ffffff'\n  },\n  Button2: {\n    backgroundColor: '#ffffff',\n    marginLeft: 'auto'\n  },\n  icon1: {\n    color: '#112647'\n  },\n  icon2: {\n    color: \"#e0d124\"\n  }\n};\n\nclass Postbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (id, goal) => {\n      this.props.addAchievment({\n        goalid: id,\n        goal: goal\n      });\n    };\n  }\n\n  render() {\n    var authenticated = this.props.user.authenticated;\n    var id = this.props.goal.id;\n    var goal = this.props.goal.body;\n    return React.createElement(Card, {\n      style: styles.Card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(PostResponse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"New Post\")), React.createElement(Button, {\n      style: styles.Button2,\n      disabled: !authenticated,\n      onClick: () => {\n        this.handleClick(id, goal);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(EmojiEventsIcon, {\n      style: styles.icon2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Achieved\"))));\n  }\n\n}\n\nPostbar.propTypes = {\n  user: PropTypes.object.isRequired,\n  addAchievment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  addAchievment\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Postbar));","map":{"version":3,"sources":["C:/Users/csamu/OneDrive/Desktop/Desktop/commentwars/src/components/Postbar.js"],"names":["React","Component","withStyles","PropTypes","PostResponse","addAchievment","Card","Typography","connect","Grid","Button","EmojiEventsIcon","styles","padding","marginTop","marginRight","marginLeft","marginBottom","backgroundColor","Button1","Button2","icon1","color","icon2","Postbar","handleClick","id","goal","props","goalid","render","authenticated","user","body","propTypes","object","isRequired","func","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles  from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport PostResponse from './Response';\r\nimport {addAchievment} from '../redux/actions/dataActions';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\r\n\r\nconst styles = {\r\n    Card:{\r\n        padding:5,\r\n        marginTop:10,\r\n        marginRight:20,\r\n        marginLeft:20,\r\n        marginBottom:10,\r\n        backgroundColor: '#112647'\r\n    },\r\n    Button1:{\r\n        backgroundColor: '#ffffff'\r\n    },    \r\n    Button2:{\r\n\r\n        backgroundColor: '#ffffff',\r\n        marginLeft:'auto'\r\n    },\r\n    icon1: {\r\n        color: '#112647'\r\n        \r\n    },\r\n    icon2: {\r\n        color: \"#e0d124\"\r\n    }\r\n}\r\n\r\nclass Postbar extends Component {\r\n\r\n    handleClick = (id, goal) => {\r\n        this.props.addAchievment({ goalid: id, goal: goal });\r\n      };\r\n\r\n    render() {\r\n        \r\n        var authenticated = this.props.user.authenticated;\r\n        var id = this.props.goal.id;\r\n        var goal = this.props.goal.body;\r\n\r\n        return (\r\n            <Card style={styles.Card}>\r\n                <Grid container>\r\n                        <PostResponse>\r\n                            <Typography>New Post</Typography>\r\n                        </PostResponse>\r\n                    <Button style={styles.Button2} disabled={!authenticated} onClick={() => { this.handleClick(id,goal)}}>\r\n                        <EmojiEventsIcon style={styles.icon2}></EmojiEventsIcon>\r\n                        <Typography>Achieved</Typography>\r\n                    </Button>\r\n                </Grid>\r\n            </Card>\r\n        \r\n        )\r\n    }\r\n}\r\nPostbar.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    addAchievment: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    user: state.user\r\n  });\r\n  \r\n  const mapActionsToProps = {\r\n    addAchievment\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n  )(withStyles(styles)(Postbar));"]},"metadata":{},"sourceType":"module"}