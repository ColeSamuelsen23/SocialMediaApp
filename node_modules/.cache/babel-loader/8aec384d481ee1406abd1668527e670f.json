{"ast":null,"code":"import { DELETE_POST } from '../types';\nconst initialState = {\n  Posts: [],\n  post: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case SET_SCREAM:\n      return { ...state,\n        scream: action.payload\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = action.payload;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_SCREAM:\n      return { ...state,\n        screams: [action.payload, ...state.screams]\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        scream: { ...state.scream,\n          comments: [action.payload, ...state.scream.comments]\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/csamu/Desktop/commentwars/src/redux/reducers/dataReducer.js"],"names":["DELETE_POST","initialState","Posts","post","loading","state","action","type","LOADING_DATA","SET_SCREAMS","screams","payload","SET_SCREAM","scream","LIKE_SCREAM","UNLIKE_SCREAM","index","findIndex","screamId","DELETE_SCREAM","splice","POST_SCREAM","SUBMIT_COMMENT","comments"],"mappings":"AAAA,SACIA,WADJ,QAES,UAFT;AAIE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,YAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKK,WAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,OAAO,EAAEJ,MAAM,CAACK,OAFX;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKQ,UAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELQ,QAAAA,MAAM,EAAEP,MAAM,CAACK;AAFV,OAAP;;AAIF,SAAKG,WAAL;AACA,SAAKC,aAAL;AACE,UAAIC,KAAK,GAAGX,KAAK,CAACK,OAAN,CAAcO,SAAd,CACTJ,MAAD,IAAYA,MAAM,CAACK,QAAP,KAAoBZ,MAAM,CAACK,OAAP,CAAeO,QADrC,CAAZ;AAGAb,MAAAA,KAAK,CAACK,OAAN,CAAcM,KAAd,IAAuBV,MAAM,CAACK,OAA9B;;AACA,UAAIN,KAAK,CAACQ,MAAN,CAAaK,QAAb,KAA0BZ,MAAM,CAACK,OAAP,CAAeO,QAA7C,EAAuD;AACrDb,QAAAA,KAAK,CAACQ,MAAN,GAAeP,MAAM,CAACK,OAAtB;AACD;;AACD,aAAO,EACL,GAAGN;AADE,OAAP;;AAGF,SAAKc,aAAL;AACEH,MAAAA,KAAK,GAAGX,KAAK,CAACK,OAAN,CAAcO,SAAd,CACLJ,MAAD,IAAYA,MAAM,CAACK,QAAP,KAAoBZ,MAAM,CAACK,OADjC,CAAR;AAGAN,MAAAA,KAAK,CAACK,OAAN,CAAcU,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;AACA,aAAO,EACL,GAAGX;AADE,OAAP;;AAGF,SAAKgB,WAAL;AACE,aAAO,EACL,GAAGhB,KADE;AAELK,QAAAA,OAAO,EAAE,CAACJ,MAAM,CAACK,OAAR,EAAiB,GAAGN,KAAK,CAACK,OAA1B;AAFJ,OAAP;;AAIF,SAAKY,cAAL;AACE,aAAO,EACL,GAAGjB,KADE;AAELQ,QAAAA,MAAM,EAAE,EACN,GAAGR,KAAK,CAACQ,MADH;AAENU,UAAAA,QAAQ,EAAE,CAACjB,MAAM,CAACK,OAAR,EAAiB,GAAGN,KAAK,CAACQ,MAAN,CAAaU,QAAjC;AAFJ;AAFH,OAAP;;AAOF;AACE,aAAOlB,KAAP;AAnDJ;AAqDD","sourcesContent":["import {\r\n    DELETE_POST\r\n  } from '../types';\r\n  \r\n  const initialState = {\r\n    Posts: [],\r\n    post: {},\r\n    loading: false\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOADING_DATA:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case SET_SCREAMS:\r\n        return {\r\n          ...state,\r\n          screams: action.payload,\r\n          loading: false\r\n        };\r\n      case SET_SCREAM:\r\n        return {\r\n          ...state,\r\n          scream: action.payload\r\n        };\r\n      case LIKE_SCREAM:\r\n      case UNLIKE_SCREAM:\r\n        let index = state.screams.findIndex(\r\n          (scream) => scream.screamId === action.payload.screamId\r\n        );\r\n        state.screams[index] = action.payload;\r\n        if (state.scream.screamId === action.payload.screamId) {\r\n          state.scream = action.payload;\r\n        }\r\n        return {\r\n          ...state\r\n        };\r\n      case DELETE_SCREAM:\r\n        index = state.screams.findIndex(\r\n          (scream) => scream.screamId === action.payload\r\n        );\r\n        state.screams.splice(index, 1);\r\n        return {\r\n          ...state\r\n        };\r\n      case POST_SCREAM:\r\n        return {\r\n          ...state,\r\n          screams: [action.payload, ...state.screams]\r\n        };\r\n      case SUBMIT_COMMENT:\r\n        return {\r\n          ...state,\r\n          scream: {\r\n            ...state.scream,\r\n            comments: [action.payload, ...state.scream.comments]\r\n          }\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}