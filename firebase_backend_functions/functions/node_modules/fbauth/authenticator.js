var url = require('url');
var https = require('https');
var queryString = require('querystring');
var fs = require('fs');

/*
 * 1. Read data from data.json
 * 2. Get Cookies by logging in using loaded data
 * 3. Get login code (gives app permission if first time)
 * 4. Get access token
 * */

var data, cookies;

exports.authenticate = callback => {

    getData(handleData);

    function handleData() {
        getCookies(data.email, data.pass, handleCookies);
    }

    function handleCookies() {
        getLoginCode(handleLoginCode);
    }

    function handleLoginCode(loginCode) {
        getAccessToken(loginCode, handleAccessToken);
    }

    function handleAccessToken(accessToken) {
        callback({"Access-token": accessToken});
    }
};



function getData(callback) {
    fs.readFile('data.json', 'utf-8', (err, dat) => {
        data = JSON.parse(dat);
        callback();
    });
}

function getCookies(email, password, callback) {

    var qString = queryString.stringify({'email': email, 'pass': password, 'default_persistent': '1', 'timezone': '-120'});

    var fbGetCookieHeaders = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36',
        'Cookie': '_js_reg_fb_gate=null',
        'Host': 'www.facebook.com',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': Buffer.byteLength(qString)
    };

    var fbGetCookieOptions = {
        protocol: 'https:',
        hostname: 'www.facebook.com',
        path: '/login.php?login_attempt=1&lwv=110',
        method: 'POST',
        headers: fbGetCookieHeaders
    };

    function findCookie(name, cookies) {
        return new RegExp(name + '=(.+?);').exec(cookies)[1];
    }

    var req = https.request(fbGetCookieOptions, (res) => {
        var rawCookies = res.headers['set-cookie'].toString();
        var c_user = findCookie('c_user', rawCookies);
        var xs = findCookie('xs', rawCookies);

        cookies = {c_user: c_user, xs: xs};
        callback();
    });

    req.write(qString);
    req.end();
}

function getLoginCode(callback) {

    var fbHeaders = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36',
        'Cookie': 'c_user=' + cookies.c_user + '; xs=' + cookies.xs,
        'Host': 'www.facebook.com'
    };

    var fbOptions = {
        protocol: 'https:',
        hostname: 'www.facebook.com',
        path: '/dialog/oauth?client_id=' + data.client_id + '&redirect_uri=' + data.redirect_uri,
        headers: fbHeaders
    };

    function doRequest() {
        https.request(fbOptions)
            .on('response', (response) => {

                var body = '';
                var bufferBody;

                response.on('data', chunk => {
                    if (bufferBody) {
                        body += chunk;
                    }
                });

                response.on('end', () => {
                    if (bufferBody) {
                        giveAppPermission(body, () => doRequest());
                    }
                });

                if (response.statusCode == 200) {
                    bufferBody = true;
                    //facebook.com/dialog/oauth?client_id=1788845541372854&redirect_uri=https://www.facebook.com/connect/login_success.html
                } else if (response.statusCode == 302) {
                    var loginCode = url.parse(response.headers.location, true).query.code;
                    callback(loginCode);
                }
            })
            .end();
    }

    doRequest();

}

function giveAppPermission(body, callback) {

    console.log("giving app permission");

    var read = /"read",\["([a-zA-Z0-9: _-]+)"/g.exec(body);
    var fb_dtsg = /"fb_dtsg\\" value=\\"([a-zA-Z0-9: _-]+)\\"/g.exec(body);

    var qString = queryString.stringify({'fb_dtsg': fb_dtsg[1], 'app_id': '1788845541372854', 'redirect_uri': data.redirect_uri, 'display': 'page', 'read': read[1]});

    var headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cookie': 'c_user=' + cookies.c_user + '; xs=' + cookies.xs,
        'Host': 'www.facebook.com',
        'Referer': 'https://www.facebook.com/dialog/oauth?client_id=' + data.redirect_uri + '&redirect_uri=' + data.redirect_uri,
        'Content-Length': Buffer.byteLength(qString)
    };

    var options = {
        protocol: 'https:',
        hostname: 'www.facebook.com',
        path: '/v2.7/dialog/oauth/read?dpr=1',
        method: 'POST',
        headers: headers
    };

    var req = https.request(options, () => callback());

    req.write(qString);
    req.end();
}

function getAccessToken(loginCode, callback) {

    var graphHeaders = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36',
        'Host': 'graph.facebook.com'
    };

    var graphOptions = {
        protocol: 'https:',
        hostname: 'graph.facebook.com',
        path: '/v2.3/oauth/access_token?client_id=' + data.client_id + '&redirect_uri=' + data.redirect_uri + '&client_secret=' + data.client_secret + '&code=' + loginCode,
        headers: graphHeaders
    };

    https.request(graphOptions, (response) => {

        response.on('data', (chunk) => {

            callback(JSON.parse(chunk.toString('utf-8')).access_token);
        });
    }).end();
}
